#!/bin/bash
#
# Hook built by extending git's pre-commit example hook

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

function run() {
  echo $@
  $@
}

function install_hlint() {
  local DOT_BIN=".bin"
  [[ -e "$DOT_BIN" ]] || run mkdir $DOT_BIN
  local -r VERSION="2.2.10"
  local -r FILENAME="hlint-$VERSION"
  HLINT="$DOT_BIN/$FILENAME"
  [[ ! -e "$HLINT" ]] || return 0 # Installed already
  local -r TMP_DEST="/tmp/$FILENAME.tgz"
  run wget https://github.com/ndmitchell/hlint/releases/download/v$VERSION/hlint-$VERSION-x86_64-linux.tar.gz -O "$TMP_DEST" || { echo "Cannot download hlint"; return 1; }
  run tar -xzf "$TMP_DEST" "$FILENAME/hlint" || { echo "Cannot extract hlint"; return 1; }
  run mv "$FILENAME/hlint" "$DOT_BIN/$FILENAME" || { echo "Cannot install hlint"; return 1; }
  run rmdir "$FILENAME"
  return 0
}

# Check that code compiles and is warnings free
run stack build || exit $?
# Check that tests pass
run stack test || exit $?
# Check that hints are applied
install_hlint
run ./$HLINT $(git ls-files "*.hs") || exit $?
# Generate documentation from sources
run stack exec haddock -- --html $(find src -name \*.hs) -o html || exit $?
